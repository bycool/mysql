day1:
1, mysql -u root -p  //登录
password:xxxxxx

2, show databases;   //显示数据库包含的数据实例
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| test               |
+--------------------+

3,use mysql          //数据库实例切换
mysql> use mysql;
Database changed

4,show tables;      //显示当前数据库实例拥有的表
mysql> show tables;
+---------------------------+
| Tables_in_mysql           |
+---------------------------+
| columns_priv              |
| ......                    |
| help_keyword              |
+---------------------------+

5,create database database_name [库选项];
库选项：约束数据库
	1，字符集设定: charset/character set，具体字符集(数据存储的编码格式)，常用：GBK UTF-8
	2, 校对集设置: collate 具体校对集(数据比较的规则)

6, sql脚本注释
	-- 双中划线+空格：  注释(单行注释)，也可使用 #

7,创建数据库测试：
mysql> create database mydatas charset utf8;             //创建成功
Query OK, 1 row affected (0.18 sec)

mysql> create database database charset utf8;            //错误示例，数据库名称使用保留关键字database,但错误信息不能明确指出问题所在。
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'database charset utf8' at line 1

mysql> create database `database` charset utf8;         //创建成功，database关键字使用反引号，是可以的
Query OK, 1 row affected (0.00 sec)  

中文数据库名是可行的，但和某个设置有关，如果创建失败，可先运行 set names gbk;


8,create database database_name 会在mysql/data/下产生一个和database_name同名的文件夹
中文例外，mysql会用某个英文字符串代替中文。

9,查询制定部分的数据库：模糊查询
	show database like 'pattern';
mysql> show databases like 'my%';
+----------------+
| Database (my%) |
+----------------+
| mydatas        |
| mysql          |
+----------------+

10,更新数据库
	1，数据库名字不可衣修改
	2，数据库的修改仅限库选项：字符集和校对集(校对集依赖字符集)

	操作:
	alter database database_file [库选项]
	charset/character set [=] 字符集
	collate 校对集

	alter database mydatas charset gbk;
	show create database database_name; 可以查看数据库的创建语句，修改字符集后，创建语句也跟着变了。

11,删除数据库
	drop database database_name;

12,表操作
	表和字段密不可分。

	create table [if not exists] table_name(
		字段名称 数据类型,
		字段名称 数据类型  -- 最后一行不需要逗号
	)[表选项];

	if not exists: 如果表名不存在，那么就创建，否则不知型创建代码；检查功能
	表选项:控制表的表现
	create table if not exists student( name varchar(10), gender varchar(10), number varchar(10), age int ) charset utf8;
	1,隐式创建表
		use database_name;
		create table table_name(); 表归属于名为database_name的数据库
	2,显式创建表
		create table database_name.table_name();
		这样可以给指定数据库添加表。

	创建表之后发生了什么：
	1，指定数据库下已经存在的表。
	2，指定数据库的目录下出现与表名相同的文件。frm文件是表结构文件。ibd文件是表数据文件。

13，查看表
	show tables;  //查看当前数据库所有表。
	show tables like 'pattern'   % 代表多个字符，: 代表单个字符。
	例如：
	show tables like 'he%';
	+-------------------------+
	| Tables_in_mydatas (he%) |
	+-------------------------+
	| hellow                  |
	+-------------------------+

	查看表创建语句:
	show create table student\g;
	mysql> show create table student\g
	+---------+---------------------------+
	| Table   | Create Table              |
	+---------+---------------------------+
	| student | CREATE TABLE `student` (
	  `name` varchar(10) DEFAULT NULL,
	  `gender` varchar(10) DEFAULT NULL,
	  `number` varchar(10) DEFAULT NULL,
	  `age` int(11) DEFAULT NULL
	) ENGINE=InnoDB DEFAULT CHARSET=utf8  |
	+---------+---------------------------+
	
	查看表结构：
	desc class;
	describe class;
	show culomns from class;

14,修改数据表
	修改表分为两部分：修改表本身，修改字段
	1，重命名表：
	   rename table tablename to new_tablename;
	   修改表项：
	   alter table student charset utf8;
	   新增字段：
	   alter table tablename add [column] colname type [属性][位置];
			alter table student add column tid int first;
	   修改字段
	   alter table tablename modify colname 数据类型 [属性][位置];
			alter table student modify tid char(10) after name;
	   重命名字段：
	   alter table student change gender sex char(20);
	   删除字段： 如果字段已经存在数据，删除列时，数据也被清除.
	   alter table student drop age;

15,删除数据表
	drop table student;
	删除表时发生了什么：
	1，表空间内指定的表被删除。
	2，数据库对应的文件夹内的表同名文件被删除。

16，新增数据
	两种方案：
	1，给全婊子端插入数据，不许要指定字段列表：要求数据的值出现的顺序必须与表中设计的字段出现的顺序一致：凡是非数值数据都需要使用引号（建议单引号）包裹。
		insert into tabelname values(值列表)[,(值列表)];
	 re: insert into student values(1, 'i2cas001', 'jim', 'femal'),(2, 'i3cas001', 'jam', 'mal');

	2, 给部分字段插入数据，需要选定字段列表：字段列表出现的顺序与字段的顺序无关；但是值列表的顺序必须与选定的字段一致。
		insert into tablename (字段列表) value (值列表);

17,  查看数据
	select */字段列表 from tablename [where 条件];
	select * from student;

18, 更新数据表
	update tablename set 字段 = 值 [where 条件];

19,删除数据表
	删除是不可逆的
	delete from tablename [where];

20 中文问题
	字符的表示：计算机的二进制与字符的对应关系(字符集)
	show variables like 'character_set%';
+--------------------------+-------------------------------------------+
| Variable_name            | Value                                     |
+--------------------------+-------------------------------------------+
| character_set_client     | utf8                                      | 客户端使用的字符集
| character_set_connection | utf8                                      | 链接器使用的字符集
| character_set_database   | utf8                                      | 当前数据库使用的字符集
| character_set_filesystem | binary                                    |
| character_set_results    | utf8                                      | 服务器输出结果使用字符集
| character_set_server     | utf8                                      |
| character_set_system     | utf8                                      |
| character_sets_dir       | /application/mysql-5.6.45/share/charsets/ |
+--------------------------+-------------------------------------------+

	set character_set_client = gbk; //修改相应参数
	set names gdk; ==> set character_set_client=gbk; set character_set_connection=gbk; set character_set_results=gbk;

21,校对集
	校对集：数据比较的方式

	校对集的三种格式：
	_bin: binary,二进制比较，数据的二进制形式，按bit比较，从左往右比较，区分大小系。
	_cs: case sensitive: 大小写敏感，区分大小写
	_ci: case insensitice,大小写不敏感。

	查看数据库所支持的所有校对集： show collation;

	在select表时，需要排序时，会根据校对集的规则在大小写上进行排序。

